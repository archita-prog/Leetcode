class Solution {
public:
    vector<bool> vis;
    vector<vector<int>> gr;
    void dfs(int node){
        if(vis[node]) return;
        vis[node] = true;

        for(auto child: gr[node]){
            if(!vis[child]){
                dfs(child);
            }
        }
    }
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        vis = vector<bool>(n, false);
        //graph
        gr = vector<vector<int>>(n);
        for(auto edge: edges){
            int u = edge[0]; 
            int v= edge[1];
            gr[u].push_back(v);
            gr[v].push_back(u);
        }
        dfs(source);
        return vis[destination];
        
    }
};
