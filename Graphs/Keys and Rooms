class Solution {
public:
    bool canVisitAllRooms(vector<vector<int>>& rooms) {
        int n = rooms.size();
        vector<bool> visited(n, false); //track visited rooms
        dfs(0, rooms, visited); // start dfs from toom 0

        //check if all rooms were visited
        for(bool v : visited){
            if(!v) return false;
        }
        return true;
        
    }
    void dfs(int room, vector<vector<int>>& rooms, vector<bool>& visited){
        visited[room] = true; // mark current room as visited
        for(int key : rooms[room]){
            if(!visited[key]){ // if the room has'nt been visited
                dfs(key, rooms, visited); // recursively visit that room
            }
        }
    }
};
