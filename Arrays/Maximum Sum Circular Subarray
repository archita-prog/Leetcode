class Solution {
public:
    int maxSubarraySumCircular(vector<int>& nums) {
        int n = nums.size();
        int curr_max = nums[0], max_sum = nums[0];
        int curr_min = nums[0], min_sum = nums[0];
        int total = nums[0];

        for(int i =1; i<n; i++){
            //for max sum
            curr_max = max(nums[i], curr_max + nums[i]);
            max_sum = max(max_sum, curr_max);

            // for min sum
            curr_min = min(nums[i], curr_min+ nums[i]);
            min_sum = min(min_sum, curr_min);

            total += nums[i];

            //handle case when all numbers are negative

        }
        if(max_sum <0){
                return max_sum;
            }
        else{
            return max(max_sum , total - min_sum);
        }
        
    }
};
