/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> result;
        //base case
        if(root == nullptr) return result ;
        queue<TreeNode*> myQueue; 
        myQueue.push(root);
        while(!myQueue.empty()){
            int level_size = myQueue.size();
            for(int i = 0; i<level_size; i++){
                TreeNode* current = myQueue.front();
                myQueue.pop();
                if(i == level_size - 1){
                    result.push_back(current->val);
                }
                if(current->left){
                    myQueue.push(current->left);
                }
                if(current->right){
                    myQueue.push(current->right);
                }


            }
        }
        return result;


        
    }
};
