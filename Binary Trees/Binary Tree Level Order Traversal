/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if (root == nullptr) return {};
        vector<vector<int>> result;
        queue<TreeNode*> MyQueue;
        MyQueue.push(root);

        while(!MyQueue.empty()){
            int n = MyQueue.size();
            vector<int> temp;
            while(n--){
                TreeNode* node = MyQueue.front();
                MyQueue.pop();

                temp.push_back(node->val);

                if(node->left) MyQueue.push(node->left);
                if(node->right) MyQueue.push(node->right);
            }
            result.push_back(temp);
        }
        return result;
    }
};
