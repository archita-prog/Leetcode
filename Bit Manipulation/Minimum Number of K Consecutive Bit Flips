class Solution {
public:
    int minKBitFlips(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int> flips(n, 0); //flip effect markers
        int flipped = 0; // current flip state (0 or 1)
        int res =0; //total flips perfomred

        for(int i =0; i<n; i++){
            if(i >= k){
                flipped ^= flips[i-k]; // remove effect of flips leaving window
            }
            // if after all flips current bit is 0 , flip starting here
            if((nums[i] ^ flipped == 0)){
                if(i + k > n){
                    return -1; //can't flip out of bounds
                }
                res++;
                flipped ^= 1; // flip current window
                flips[i] = 1; // mark flip start
            }
        }
        return res;
        
    }
};
